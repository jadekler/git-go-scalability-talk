// Code generated by protoc-gen-go. DO NOT EDIT.
// source: application/model/grpc_unary_inputter.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GrpcUnaryInputterService service

type GrpcUnaryInputterServiceClient interface {
	// Accepts a message but doesn't return anything back
	MakeRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Empty, error)
}

type grpcUnaryInputterServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrpcUnaryInputterServiceClient(cc *grpc.ClientConn) GrpcUnaryInputterServiceClient {
	return &grpcUnaryInputterServiceClient{cc}
}

func (c *grpcUnaryInputterServiceClient) MakeRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/model.GrpcUnaryInputterService/MakeRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GrpcUnaryInputterService service

type GrpcUnaryInputterServiceServer interface {
	// Accepts a message but doesn't return anything back
	MakeRequest(context.Context, *Request) (*Empty, error)
}

func RegisterGrpcUnaryInputterServiceServer(s *grpc.Server, srv GrpcUnaryInputterServiceServer) {
	s.RegisterService(&_GrpcUnaryInputterService_serviceDesc, srv)
}

func _GrpcUnaryInputterService_MakeRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcUnaryInputterServiceServer).MakeRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.GrpcUnaryInputterService/MakeRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcUnaryInputterServiceServer).MakeRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcUnaryInputterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.GrpcUnaryInputterService",
	HandlerType: (*GrpcUnaryInputterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeRequest",
			Handler:    _GrpcUnaryInputterService_MakeRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "application/model/grpc_unary_inputter.proto",
}

func init() { proto.RegisterFile("application/model/grpc_unary_inputter.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4e, 0x2c, 0x28, 0xc8,
	0xc9, 0x4c, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0xcf, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0x4f, 0x2f,
	0x2a, 0x48, 0x8e, 0x2f, 0xcd, 0x4b, 0x2c, 0xaa, 0x8c, 0xcf, 0xcc, 0x2b, 0x28, 0x2d, 0x29, 0x49,
	0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x2b, 0x90, 0x92, 0xc5, 0xd4, 0x53,
	0x52, 0x59, 0x90, 0x5a, 0x0c, 0x51, 0x65, 0xe4, 0xc9, 0x25, 0xe1, 0x5e, 0x54, 0x90, 0x1c, 0x0a,
	0x32, 0xc1, 0x13, 0x6a, 0x40, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x2e, 0x17, 0xb7,
	0x6f, 0x62, 0x76, 0x6a, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x10, 0x9f, 0x1e, 0x58, 0xbb,
	0x1e, 0x94, 0x2f, 0xc5, 0x03, 0xe5, 0xbb, 0xe6, 0x16, 0x94, 0x54, 0x2a, 0x31, 0x24, 0xb1, 0x81,
	0x4d, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x70, 0x67, 0x21, 0x99, 0xa6, 0x00, 0x00, 0x00,
}
